// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _net_HH_
#define _net_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_2d.h"
#include "net_fadd_32ns_32nbkb.h"
#include "net_fmul_32ns_32ncud.h"
#include "net_fptrunc_64ns_dEe.h"
#include "net_fpext_32ns_64eOg.h"
#include "net_fexp_32ns_32nfYi.h"
#include "net_dadd_64ns_64ng8j.h"
#include "net_ddiv_64ns_64nhbi.h"
#include "net_mac_muladd_4nibs.h"
#include "net_weights.h"
#include "net_output_of_conv.h"
#include "net_output_assign.h"
#include "net_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 14,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct net : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;


    // Module declarations
    net(sc_module_name name);
    SC_HAS_PROCESS(net);

    ~net();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    net_weights* weights_U;
    net_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* net_AXILiteS_s_axi_U;
    net_output_of_conv* output_of_conv_U;
    net_output_assign* output_assign_U;
    conv_2d* grp_conv_2d_fu_178;
    net_fadd_32ns_32nbkb<1,5,32,32,32>* net_fadd_32ns_32nbkb_U8;
    net_fmul_32ns_32ncud<1,4,32,32,32>* net_fmul_32ns_32ncud_U9;
    net_fptrunc_64ns_dEe<1,1,64,32>* net_fptrunc_64ns_dEe_U10;
    net_fpext_32ns_64eOg<1,1,32,64>* net_fpext_32ns_64eOg_U11;
    net_fexp_32ns_32nfYi<1,9,32,32,32>* net_fexp_32ns_32nfYi_U12;
    net_dadd_64ns_64ng8j<1,5,64,64,64>* net_dadd_64ns_64ng8j_U13;
    net_ddiv_64ns_64nhbi<1,31,64,64,64>* net_ddiv_64ns_64nhbi_U14;
    net_mac_muladd_4nibs<1,1,4,12,11,15>* net_mac_muladd_4nibs_U15;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_r_q0;
    sc_signal< sc_lv<14> > weights_address0;
    sc_signal< sc_logic > weights_ce0;
    sc_signal< sc_lv<32> > weights_q0;
    sc_signal< sc_lv<14> > indvar_flatten_reg_133;
    sc_signal< sc_lv<4> > index_i_reg_144;
    sc_signal< sc_lv<32> > input_assign_reg_155;
    sc_signal< sc_lv<11> > indexx_i_reg_167;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_217_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_317;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state35_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state39_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state43_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state47_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state51_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state55_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state59_pp0_stage0_iter14;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_317_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_317_pp0_iter2_reg;
    sc_signal< sc_lv<14> > indvar_flatten_next_fu_223_p2;
    sc_signal< sc_lv<14> > indvar_flatten_next_reg_321;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond_i3_fu_235_p2;
    sc_signal< sc_lv<1> > exitcond_i3_reg_326;
    sc_signal< sc_lv<1> > exitcond_i3_reg_326_pp0_iter1_reg;
    sc_signal< sc_lv<11> > indexx_i_mid2_fu_241_p3;
    sc_signal< sc_lv<11> > indexx_i_mid2_reg_331;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_fu_249_p3;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter1_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter2_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter3_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter4_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter5_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter6_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter7_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter8_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter9_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter10_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter11_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter12_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter13_reg;
    sc_signal< sc_lv<4> > tmp_i_mid2_v_reg_337_pp0_iter14_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state16_pp0_stage1_iter3;
    sc_signal< bool > ap_block_state20_pp0_stage1_iter4;
    sc_signal< bool > ap_block_state24_pp0_stage1_iter5;
    sc_signal< bool > ap_block_state28_pp0_stage1_iter6;
    sc_signal< bool > ap_block_state32_pp0_stage1_iter7;
    sc_signal< bool > ap_block_state36_pp0_stage1_iter8;
    sc_signal< bool > ap_block_state40_pp0_stage1_iter9;
    sc_signal< bool > ap_block_state44_pp0_stage1_iter10;
    sc_signal< bool > ap_block_state48_pp0_stage1_iter11;
    sc_signal< bool > ap_block_state52_pp0_stage1_iter12;
    sc_signal< bool > ap_block_state56_pp0_stage1_iter13;
    sc_signal< bool > ap_block_state60_pp0_stage1_iter14;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > output_of_conv_q0;
    sc_signal< sc_lv<32> > output_of_conv_load_reg_354;
    sc_signal< sc_lv<32> > weights_load_reg_359;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state13_pp0_stage2_iter2;
    sc_signal< bool > ap_block_state17_pp0_stage2_iter3;
    sc_signal< bool > ap_block_state21_pp0_stage2_iter4;
    sc_signal< bool > ap_block_state25_pp0_stage2_iter5;
    sc_signal< bool > ap_block_state29_pp0_stage2_iter6;
    sc_signal< bool > ap_block_state33_pp0_stage2_iter7;
    sc_signal< bool > ap_block_state37_pp0_stage2_iter8;
    sc_signal< bool > ap_block_state41_pp0_stage2_iter9;
    sc_signal< bool > ap_block_state45_pp0_stage2_iter10;
    sc_signal< bool > ap_block_state49_pp0_stage2_iter11;
    sc_signal< bool > ap_block_state53_pp0_stage2_iter12;
    sc_signal< bool > ap_block_state57_pp0_stage2_iter13;
    sc_signal< bool > ap_block_state61_pp0_stage2_iter14;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<11> > indexx_fu_272_p2;
    sc_signal< sc_lv<11> > indexx_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter1;
    sc_signal< bool > ap_block_state14_pp0_stage3_iter2;
    sc_signal< bool > ap_block_state18_pp0_stage3_iter3;
    sc_signal< bool > ap_block_state22_pp0_stage3_iter4;
    sc_signal< bool > ap_block_state26_pp0_stage3_iter5;
    sc_signal< bool > ap_block_state30_pp0_stage3_iter6;
    sc_signal< bool > ap_block_state34_pp0_stage3_iter7;
    sc_signal< bool > ap_block_state38_pp0_stage3_iter8;
    sc_signal< bool > ap_block_state42_pp0_stage3_iter9;
    sc_signal< bool > ap_block_state46_pp0_stage3_iter10;
    sc_signal< bool > ap_block_state50_pp0_stage3_iter11;
    sc_signal< bool > ap_block_state54_pp0_stage3_iter12;
    sc_signal< bool > ap_block_state58_pp0_stage3_iter13;
    sc_signal< bool > ap_block_state62_pp0_stage3_iter14;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<1> > ifzero_fu_277_p2;
    sc_signal< sc_lv<1> > ifzero_reg_370;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter2_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter3_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter4_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter5_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter6_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter7_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter8_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter9_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter10_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter11_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter12_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter13_reg;
    sc_signal< sc_lv<1> > ifzero_reg_370_pp0_iter14_reg;
    sc_signal< sc_lv<32> > grp_fu_192_p2;
    sc_signal< sc_lv<32> > tmp_i_reg_374;
    sc_signal< sc_lv<32> > grp_fu_188_p2;
    sc_signal< sc_lv<32> > sum_reg_384;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<32> > grp_fu_202_p2;
    sc_signal< sc_lv<32> > tmp_i_i_i_i_reg_395;
    sc_signal< sc_lv<64> > tmp_2_i_i_fu_199_p1;
    sc_signal< sc_lv<64> > tmp_2_i_i_reg_400;
    sc_signal< sc_lv<64> > grp_fu_207_p2;
    sc_signal< sc_lv<64> > tmp_3_i_i_reg_405;
    sc_signal< sc_lv<64> > grp_fu_212_p2;
    sc_signal< sc_lv<64> > tmp_4_i_i_reg_410;
    sc_signal< sc_lv<32> > tmp_5_i_i_fu_196_p1;
    sc_signal< sc_lv<32> > tmp_5_i_i_reg_415;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_conv_2d_fu_178_ap_ready;
    sc_signal< sc_logic > grp_conv_2d_fu_178_ap_done;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_lv<11> > output_of_conv_address0;
    sc_signal< sc_logic > output_of_conv_ce0;
    sc_signal< sc_logic > output_of_conv_we0;
    sc_signal< sc_lv<4> > output_assign_address0;
    sc_signal< sc_logic > output_assign_ce0;
    sc_signal< sc_logic > output_assign_we0;
    sc_signal< sc_lv<32> > output_assign_q0;
    sc_signal< sc_logic > grp_conv_2d_fu_178_ap_start;
    sc_signal< sc_logic > grp_conv_2d_fu_178_ap_idle;
    sc_signal< sc_lv<10> > grp_conv_2d_fu_178_input_r_address0;
    sc_signal< sc_logic > grp_conv_2d_fu_178_input_r_ce0;
    sc_signal< sc_lv<11> > grp_conv_2d_fu_178_output_r_address0;
    sc_signal< sc_logic > grp_conv_2d_fu_178_output_r_ce0;
    sc_signal< sc_logic > grp_conv_2d_fu_178_output_r_we0;
    sc_signal< sc_lv<32> > grp_conv_2d_fu_178_output_r_d0;
    sc_signal< sc_lv<14> > ap_phi_mux_indvar_flatten_phi_fu_137_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_index_i_phi_fu_148_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_input_assign_phi_fu_159_p4;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<11> > ap_phi_mux_indexx_i_phi_fu_171_p4;
    sc_signal< sc_logic > grp_conv_2d_fu_178_ap_start_reg;
    sc_signal< sc_lv<64> > tmp_9_i_fu_257_p1;
    sc_signal< sc_lv<64> > tmp_1_cast_fu_268_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_i_mid2_fu_304_p1;
    sc_signal< sc_lv<32> > grp_fu_188_p0;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<32> > grp_fu_202_p1;
    sc_signal< sc_lv<4> > index_fu_229_p2;
    sc_signal< sc_lv<15> > grp_fu_308_p3;
    sc_signal< sc_lv<32> > tmp_to_int_i_i_fu_290_p1;
    sc_signal< sc_lv<32> > tmp_neg_i_i_fu_293_p2;
    sc_signal< sc_lv<4> > grp_fu_308_p0;
    sc_signal< sc_lv<12> > grp_fu_308_p1;
    sc_signal< sc_lv<11> > grp_fu_308_p2;
    sc_signal< sc_logic > ap_CS_fsm_state64;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<15> > grp_fu_308_p00;
    sc_signal< sc_lv<15> > grp_fu_308_p20;
    sc_signal< sc_lv<32> > ap_return;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_pp0_stage1;
    static const sc_lv<8> ap_ST_fsm_pp0_stage2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage3;
    static const sc_lv<8> ap_ST_fsm_state63;
    static const sc_lv<8> ap_ST_fsm_state64;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<14> ap_const_lv14_34D0;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<11> ap_const_lv11_548;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<15> ap_const_lv15_548;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state64();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state10_pp0_stage3_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state12_pp0_stage1_iter2();
    void thread_ap_block_state13_pp0_stage2_iter2();
    void thread_ap_block_state14_pp0_stage3_iter2();
    void thread_ap_block_state15_pp0_stage0_iter3();
    void thread_ap_block_state16_pp0_stage1_iter3();
    void thread_ap_block_state17_pp0_stage2_iter3();
    void thread_ap_block_state18_pp0_stage3_iter3();
    void thread_ap_block_state19_pp0_stage0_iter4();
    void thread_ap_block_state20_pp0_stage1_iter4();
    void thread_ap_block_state21_pp0_stage2_iter4();
    void thread_ap_block_state22_pp0_stage3_iter4();
    void thread_ap_block_state23_pp0_stage0_iter5();
    void thread_ap_block_state24_pp0_stage1_iter5();
    void thread_ap_block_state25_pp0_stage2_iter5();
    void thread_ap_block_state26_pp0_stage3_iter5();
    void thread_ap_block_state27_pp0_stage0_iter6();
    void thread_ap_block_state28_pp0_stage1_iter6();
    void thread_ap_block_state29_pp0_stage2_iter6();
    void thread_ap_block_state30_pp0_stage3_iter6();
    void thread_ap_block_state31_pp0_stage0_iter7();
    void thread_ap_block_state32_pp0_stage1_iter7();
    void thread_ap_block_state33_pp0_stage2_iter7();
    void thread_ap_block_state34_pp0_stage3_iter7();
    void thread_ap_block_state35_pp0_stage0_iter8();
    void thread_ap_block_state36_pp0_stage1_iter8();
    void thread_ap_block_state37_pp0_stage2_iter8();
    void thread_ap_block_state38_pp0_stage3_iter8();
    void thread_ap_block_state39_pp0_stage0_iter9();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state40_pp0_stage1_iter9();
    void thread_ap_block_state41_pp0_stage2_iter9();
    void thread_ap_block_state42_pp0_stage3_iter9();
    void thread_ap_block_state43_pp0_stage0_iter10();
    void thread_ap_block_state44_pp0_stage1_iter10();
    void thread_ap_block_state45_pp0_stage2_iter10();
    void thread_ap_block_state46_pp0_stage3_iter10();
    void thread_ap_block_state47_pp0_stage0_iter11();
    void thread_ap_block_state48_pp0_stage1_iter11();
    void thread_ap_block_state49_pp0_stage2_iter11();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state50_pp0_stage3_iter11();
    void thread_ap_block_state51_pp0_stage0_iter12();
    void thread_ap_block_state52_pp0_stage1_iter12();
    void thread_ap_block_state53_pp0_stage2_iter12();
    void thread_ap_block_state54_pp0_stage3_iter12();
    void thread_ap_block_state55_pp0_stage0_iter13();
    void thread_ap_block_state56_pp0_stage1_iter13();
    void thread_ap_block_state57_pp0_stage2_iter13();
    void thread_ap_block_state58_pp0_stage3_iter13();
    void thread_ap_block_state59_pp0_stage0_iter14();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state60_pp0_stage1_iter14();
    void thread_ap_block_state61_pp0_stage2_iter14();
    void thread_ap_block_state62_pp0_stage3_iter14();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9_pp0_stage2_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_index_i_phi_fu_148_p4();
    void thread_ap_phi_mux_indexx_i_phi_fu_171_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_137_p4();
    void thread_ap_phi_mux_input_assign_phi_fu_159_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond_flatten_fu_217_p2();
    void thread_exitcond_i3_fu_235_p2();
    void thread_grp_conv_2d_fu_178_ap_start();
    void thread_grp_fu_188_p0();
    void thread_grp_fu_202_p1();
    void thread_grp_fu_308_p0();
    void thread_grp_fu_308_p00();
    void thread_grp_fu_308_p1();
    void thread_grp_fu_308_p2();
    void thread_grp_fu_308_p20();
    void thread_ifzero_fu_277_p2();
    void thread_index_fu_229_p2();
    void thread_indexx_fu_272_p2();
    void thread_indexx_i_mid2_fu_241_p3();
    void thread_indvar_flatten_next_fu_223_p2();
    void thread_output_assign_address0();
    void thread_output_assign_ce0();
    void thread_output_assign_we0();
    void thread_output_of_conv_address0();
    void thread_output_of_conv_ce0();
    void thread_output_of_conv_we0();
    void thread_tmp_1_cast_fu_268_p1();
    void thread_tmp_9_i_fu_257_p1();
    void thread_tmp_i_mid2_fu_304_p1();
    void thread_tmp_i_mid2_v_fu_249_p3();
    void thread_tmp_neg_i_i_fu_293_p2();
    void thread_tmp_to_int_i_i_fu_290_p1();
    void thread_weights_address0();
    void thread_weights_ce0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
